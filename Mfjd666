const PASTES = PASTES;

addEventListener('fetch', event => {
    event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
    const { pathname } = new URL(request.url);

    // 处理 /api/pastes 的 POST 请求，创建新的粘贴
    if (request.method === 'POST' && pathname === '/api/pastes') {
        const { content } = await request.json();
        const id = generateID(); // 生成唯一 ID
        const createdAt = new Date().toISOString();
        const paste = { id, content, createdAt };
        await PASTES.put(id, JSON.stringify(paste)); // 将粘贴内容存储到 KV 存储中
        return new Response(JSON.stringify(paste), {
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }

    // 处理 /api/pastes 的 GET 请求，获取所有粘贴内容
    if (request.method === 'GET' && pathname === '/api/pastes') {
        const pastes = await getAllPastes(); // 获取所有粘贴内容
        return new Response(JSON.stringify(pastes), {
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }

    // 默认返回 404 Not Found
    return new Response('Not Found', {
        status: 404,
        headers: {
            'Content-Type': 'text/plain',
        },
    });
}

async function getAllPastes() {
    const pasteList = [];
    // 遍历 KV 存储中的所有条目，并将其添加到数组中
    await PASTES.list({}).then((keys) => {
        keys.keys.forEach(async (element) => {
            const { value } = await PASTES.get(element.name);
            pasteList.push(JSON.parse(value));
        });
    });
    return pasteList;
}

function generateID() {
    return Math.random().toString(36).substr(2, 9); // 生成随机的 9 位 ID
}