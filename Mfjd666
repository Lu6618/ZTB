const PASTES = PASTES;

addEventListener('fetch', event => {
    event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
    const url = new URL(request.url);

    if (request.method === 'POST' && url.pathname === '/api/create-paste') {
        try {
            const { content, expiration, password } = await request.json();
            const id = generateID(); // 生成唯一 ID
            const expires = Date.now() + expiration * 60 * 60 * 1000; // 计算过期时间

            const paste = {
                id,
                content,
                expires,
                password
            };

            await PASTES.put(id, JSON.stringify(paste));

            const shareLink = `https://yourdomain.com/view/${id}`; // 替换为你的域名和路径

            return new Response(JSON.stringify({ link: shareLink }), {
                headers: {
                    'Content-Type': 'application/json'
                },
                status: 200
            });
        } catch (error) {
            return new Response(JSON.stringify({ error: 'Failed to create paste.' }), {
                headers: {
                    'Content-Type': 'application/json'
                },
                status: 500
            });
        }
    } else if (request.method === 'PUT' && url.pathname === '/api/update-paste') {
        try {
            const { id, content, password } = await request.json();
            const existingPaste = await PASTES.get(id);

            if (!existingPaste) {
                return new Response(JSON.stringify({ error: 'Paste not found.' }), {
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    status: 404
                });
            }

            const parsedPaste = JSON.parse(existingPaste);
            if (password !== parsedPaste.password) {
                return new Response(JSON.stringify({ error: 'Unauthorized.' }), {
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    status: 401
                });
            }

            parsedPaste.content = content;
            await PASTES.put(id, JSON.stringify(parsedPaste));

            return new Response(JSON.stringify({ message: 'Paste updated successfully.' }), {
                headers: {
                    'Content-Type': 'application/json'
                },
                status: 200
            });
        } catch (error) {
            return new Response(JSON.stringify({ error: 'Failed to update paste.' }), {
                headers: {
                    'Content-Type': 'application/json'
                },
                status: 500
            });
        }
    } else {
        return new Response('Not Found', {
            status: 404,
            headers: {
                'Content-Type': 'text/plain'
            }
        });
    }
}

function generateID() {
    return Math.random().toString(36).substr(2, 9); // 生成随机的 9 位 ID
}
